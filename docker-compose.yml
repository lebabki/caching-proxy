version: '2.4'

x-logging: &logging
  logging:
    options:
      max-size: "5m"
      max-file: "10"

services:
  registry-proxy:
    <<: *logging
    image: rpardini/docker-registry-proxy:0.6.4
    restart: unless-stopped
    environment:
      ALLOW_PUSH: 'true'
      ENABLE_MANIFEST_CACHE: 'true'
      MANIFEST_CACHE_PRIMARY_REGEX: '(stable|nightly|production|test)'
      MANIFEST_CACHE_PRIMARY_TIME: 1d
      MANIFEST_CACHE_SECONDARY_REGEX: '(.*)(\d|\.)+(.*)(\d|\.)+(.*)(\d|\.)+'
      MANIFEST_CACHE_SECONDARY_TIME: 3d
      MANIFEST_CACHE_DEFAULT_TIME: 2d
      CACHE_MAX_SIZE: 20g
      REGISTRIES: "k8s.gcr.io gcr.io quay.io ghcr.io ${GITLAB_SELFHOSTED_PRIVATE__FQDN} ${GITLAB_SELFHOSTED_PUBLIC__FQDN}"
      AUTH_REGISTRIES: "${GITLAB_SELFHOSTED_PRIVATE__FQDN}:${GITLAB_SELFHOSTED_PRIVATE__USERNAME}:${GITLAB_SELFHOSTED_PRIVATE__PASSWORD}"
      SEND_TIMEOUT: 180s
      CLIENT_BODY_TIMEOUT: 180s
      CLIENT_HEADER_TIMEOUT: 180s
      KEEPALIVE_TIMEOUT: 300s
      PROXY_READ_TIMEOUT: 180s
      PROXY_CONNECT_TIMEOUT: 180s
      PROXY_SEND_TIMEOUT: 180s
      PROXY_CONNECT_READ_TIMEOUT: 180s
      PROXY_CONNECT_CONNECT_TIMEOUT: 180s
      PROXY_CONNECT_SEND_TIMEOUT: 180s
    ports:
      - ${LISTEN_IFACE}:3128:3128
    volumes:
      - registry-proxy-cache:/docker_mirror_cache
      - ./ca:/ca
      - ${GITLAB_SELFHOSTED__CA_CHAINS_DIRECTORY}:/usr/local/share/ca-certificates:ro
    init: true
    entrypoint:
      - bash
      - -exc
      - |
          apk --no-cache add ca-certificates
          update-ca-certificates
          if [ "$${AUTH_REGISTRIES}" = "::" ]; then
            unset "$${AUTH_REGISTRIES}"
          fi
          exec /entrypoint.sh
    healthcheck:
      test: wget -q --spider http://localhost:3128
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 5s

  all-proxy:
    <<: *logging
    image: all-proxy:local
    restart: unless-stopped
    build:
      context: ./build/all-proxy
      network: host
    ports:
      - ${LISTEN_IFACE}:3129:3128
      - 127.0.0.1:3129:3128
    volumes:
      - all-proxy-cache:/var/cache/squid
      - ./config/all-proxy:/etc/squid:ro
      - ./ca:/ca:ro
      - ./logs/all-proxy:/usr/local/squid/var/logs
    init: true
    entrypoint:
      - bash
      - -exc
      - |
          export PATH=$$PATH:/usr/local/squid/sbin:/usr/local/squid/libexec

          mkdir -p /etc/squid-ssl /var/lib/squid /var/cache/squid
          chown -R squid:squid /var/lib/squid /var/cache/squid /usr/local/squid/var/logs
          rm -rfv /var/lib/squid/ssl_db

          cp -fv --preserve=mode /ca/ca.crt /etc/squid-ssl/ca.crt
          ## pass:foobar - hardcoded in docker-registry-proxy
          openssl rsa -in /ca/ca.key -passin pass:foobar > /etc/squid-ssl/ca.key
          openssl x509 -in /etc/squid-ssl/ca.crt -outform DER -out /etc/squid-ssl/ca.der

          security_file_certgen -c -s /var/lib/squid/ssl_db -M 16MB
          chown -R squid:squid /var/lib/squid/ssl_db
          squid -f /etc/squid/squid.conf --foreground -z
          exec squid -f /etc/squid/squid.conf --foreground -NYCd 1
    depends_on:
      # need to wait CA cert generation in registry-proxy service
      registry-proxy:
        condition: service_healthy

  non-cache-proxy:
    <<: *logging
    image: non-cache-proxy:local
    build:
      context: ./build/non-cache-proxy
      network: host
    restart: unless-stopped
    init: true
    ports:
      - 127.0.0.1:3128:3128
    volumes:
      - ./config/non-cache-proxy/tinyproxy.conf:/etc/tinyproxy/tinyproxy.conf:ro

volumes:
  registry-proxy-cache:
  all-proxy-cache:
